---
import Layout from '../layouts/Layout.astro';

const codeExample = `// Simple Node.js server
const http = require('http');

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/html' });
  res.end('<h1>Hello, World!</h1>');
});

server.listen(3000, () => {
  console.log('Server running on port 3000');
});`;
---

<Layout title="Simple Examples - Mark Wylde">
	<section class="section">
		<div class="container">
			<h2>Simple Examples</h2>
			<p style="text-align: center; margin-bottom: 3rem;">
				Demonstrating that simple solutions can be powerful and effective
			</p>

			<div class="content-sections">
				<div class="content-section">
					<h3>Simple is Better</h3>
					<p>
						In web development, we often overcomplicate things. Sometimes the simplest solution
						is the best solution. This page demonstrates how straightforward approaches can be
						both effective and maintainable.
					</p>
				</div>

				<div class="code-example">
					<h3>Code Example</h3>
					<pre><code>{codeExample}</code></pre>
					<p>
						This simple Node.js server does exactly what it needs to do - serve content.
						No frameworks, no dependencies, just the standard library.
					</p>
				</div>

				<div class="interactive-demo">
					<h3>Interactive Demo</h3>
					<div class="demo-box">
						<p>Simple interactions can be effective too!</p>
						<button class="demo-button" onclick="this.innerHTML = this.innerHTML === 'Click me!' ? 'Clicked!' : 'Click me!'">
							Click me!
						</button>
					</div>
				</div>

				<div class="principles">
					<h3>Simple Development Principles</h3>
					<ul class="principles-list">
						<li>
							<strong>Start Small:</strong> Begin with the simplest solution that works
						</li>
						<li>
							<strong>Add Complexity Only When Needed:</strong> Don't solve problems you don't have
						</li>
						<li>
							<strong>Prefer Standard Libraries:</strong> Use what's already available
						</li>
						<li>
							<strong>Make it Readable:</strong> Simple code is easy to understand
						</li>
					</ul>
				</div>

				<div class="callout">
					<h4>ðŸ’¡ Remember</h4>
					<p>
						"You Ain't Gonna Need It" (YAGNI) is a powerful principle. Build what you need now,
						not what you think you might need later.
					</p>
				</div>

				<div class="conclusion">
					<h3>Keep It Simple</h3>
					<p>
						Whether you're building a simple static site or a complex web application,
						always ask yourself: "What's the simplest way to solve this problem?"
						Your future self will thank you.
					</p>
				</div>
			</div>
		</div>
	</section>
</Layout>

<style>
	.content-sections {
		max-width: 800px;
		margin: 0 auto;
	}

	.content-section {
		margin-bottom: 3rem;
	}

	.code-example {
		background-color: var(--secondary-bg);
		padding: 25px;
		border-radius: 8px;
		box-shadow: 0 5px 15px var(--shadow-color);
		border: 1px solid var(--border-color);
		margin-bottom: 3rem;
	}

	.code-example h3 {
		margin-top: 0;
		margin-bottom: 20px;
	}

	.code-example pre {
		background-color: var(--primary-bg);
		padding: 20px;
		border-radius: 6px;
		overflow-x: auto;
		border: 1px solid var(--border-color);
		margin-bottom: 15px;
	}

	.code-example code {
		font-family: 'Monaco', 'Menlo', 'Consolas', monospace;
		font-size: 0.9em;
		line-height: 1.5;
	}

	.interactive-demo {
		background-color: var(--secondary-bg);
		padding: 25px;
		border-radius: 8px;
		box-shadow: 0 5px 15px var(--shadow-color);
		border: 1px solid var(--border-color);
		margin-bottom: 3rem;
	}

	.demo-box {
		background-color: var(--primary-bg);
		padding: 20px;
		border-radius: 6px;
		text-align: center;
		border: 1px solid var(--border-color);
	}

	.demo-button {
		background-color: var(--accent-color);
		color: var(--secondary-bg);
		border: none;
		padding: 10px 20px;
		border-radius: 5px;
		cursor: pointer;
		font-size: 1em;
		transition: background-color 0.3s ease;
		margin-top: 10px;
	}

	.demo-button:hover {
		background-color: var(--heading-color);
	}

	.principles-list {
		margin-left: 1.5rem;
		margin-bottom: 1.5rem;
	}

	.principles-list li {
		margin-bottom: 1rem;
		line-height: 1.6;
	}

	.callout {
		background-color: var(--secondary-bg);
		padding: 25px;
		border-radius: 8px;
		box-shadow: 0 5px 15px var(--shadow-color);
		border: 1px solid var(--border-color);
		margin-bottom: 3rem;
	}

	.callout h4 {
		margin-top: 0;
		margin-bottom: 15px;
		color: var(--heading-color);
	}

	.callout p {
		margin-bottom: 0;
		font-style: italic;
	}

	.conclusion {
		text-align: center;
		padding: 40px 25px;
		background-color: var(--secondary-bg);
		border-radius: 8px;
		box-shadow: 0 5px 15px var(--shadow-color);
		border: 1px solid var(--border-color);
	}
</style>
